{"version":3,"file":"static/js/310.e6c8388a.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,IAAH,yCAITC,EAAOD,EAAAA,GAAAA,KAAH,6EAOJE,EAAQF,EAAAA,GAAAA,MAAH,yFAOLG,EAASH,EAAAA,GAAAA,OAAH,wF,SC0DnB,EAtEe,WACX,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAaL,EAAaM,IAAI,SACpC,GAA0BJ,EAAAA,EAAAA,UAASG,GAA0B,IAA7D,eAAOE,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAO,UAXJ,gCAWI,gCAVL,mCAUK,4DAAiGL,GAEzGA,GAKDM,MAAMD,GAASE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACvBF,MAAK,SAAAG,GACFb,EAAUa,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,MAAH,MAAoB,CAAEC,GAAtB,EAAUA,GAAoBD,MAAOA,EAArC,IAC9B,IAAEE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIzB,GAAE,CAAChB,IAQJ,OACI,UAACb,EAAD,YACI,UAACE,EAAD,CAAM8B,SATO,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOvB,MAAMsB,MACjCrB,EAASqB,GACT5B,EAAgB,CAAEM,MAAOsB,GAC5B,EAIO,WACI,SAAChC,EAAD,CACIkC,KAAK,QACLC,KAAK,QACLC,aAAc1B,EACd2B,aAAa,MACbC,WAAS,EACTC,YAAY,eAEhB,SAACtC,EAAD,CAAQiC,KAAK,SAAb,UACI,2CAGR,wBACK5B,EAAOgB,KAAI,gBAAGE,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACR,yBACI,SAAC,KAAD,CAAMiB,GAAE,UAAKhB,GACTiB,OAAQ,CAAEC,WAAW,SAAD,OAAWhC,IAC/BiC,MAAO,CAAEC,KAAMhC,GAFnB,SAEgCW,KAH3BC,EADD,QAa3B,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviePage = styled.div`\n padding: 40px;\n`;\n\nexport const Form = styled.form`\ndisplay:flex;\nheight:25px;\nmargin-bottom: 16px;\n\n`;\n\nexport const Input = styled.input`\nmargin-right:16px;\nborder: 1px solid navy;\nfont-size: 16px;\n\n`;\n\nexport const Button = styled.button`\nfont-size: 16px;\nborder-radius: 2px;\nborder: 1px solid navy;\n`;\n\n\n\n\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { MoviePage, Button, Form, Input } from './Movies.styled';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '07365d3730901c9189566ffe38d9d5bb';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const queryParam = searchParams.get('query');\n    const [query, setQuery] = useState(queryParam ? queryParam : '');\n    const location = useLocation();\n\n    useEffect(() => {\n        const urlFilm = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n\n        if (!query) {\n            return;\n        }\n\n        function fetchMovie() {\n            fetch(urlFilm).then(response => response.json())\n                .then(data => {\n                    setMovies(data.results.map(({ title, id }) => ({ id: id, title: title })));\n                }).catch(error => console.log(error));\n        }\n        fetchMovie();\n\n    }, [query]);\n    const handleSubmit = event => {\n        event.preventDefault();\n        const value = event.target.query.value;\n        setQuery(value);\n        setSearchParams({ query: value });\n    }\n       \n    return (\n        <MoviePage>\n            <Form onSubmit={handleSubmit}>\n                <Input\n                    type=\" text\"\n                    name=\"query\"\n                    defaultValue={query}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Find film\"\n                />\n                <Button type=\"submit\">\n                    <span>Search</span>\n                </Button>\n            </Form>\n            <ul>\n                {movies.map(({ id, title }) => (\n                    <li key={id}>\n                        <Link to={`${id}`}\n                            search={{ querySerch: `query=${query}` }}\n                            state={{ from: location }}>{title}</Link>\n                    </li>\n                )\n                    \n                )}\n            </ul>\n        </MoviePage>\n    );\n\n};\n \nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;"],"names":["MoviePage","styled","Form","Input","Button","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","queryParam","get","query","setQuery","location","useLocation","useEffect","urlFilm","fetch","then","response","json","data","results","map","title","id","catch","error","console","log","onSubmit","event","preventDefault","value","target","type","name","defaultValue","autoComplete","autoFocus","placeholder","to","search","querySerch","state","from"],"sourceRoot":""}