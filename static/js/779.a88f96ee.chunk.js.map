{"version":3,"file":"static/js/779.a88f96ee.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,GAAAA,GAAH,0BAIJC,EAAaD,EAAAA,GAAAA,GAAH,0BAIVE,EAASF,EAAAA,GAAAA,GAAH,yCAING,EAAUH,EAAAA,GAAAA,EAAH,yC,SCHPI,EAAU,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAG,UARA,gCAQA,iBAAuBH,EAAvB,4BATD,mCASC,mBAKV,SAASI,IACLC,MAAMF,GAAKG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACnBF,MAAK,SAAAG,GACFV,EAAWU,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,MAAmC,CAC3DC,OAAQF,EAAgBG,SACxBF,QAASA,EAFe,IAI/B,IAAEG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACpB,CAVDb,IAWAA,GACH,GAAE,CAACJ,IAGmB,IAAnBF,EAAQsB,QACJ,SAAC7B,EAAD,UACLO,EAAQa,KAAI,WAAqBU,GAArB,IAAGP,EAAH,EAAGA,OAAQD,EAAX,EAAWA,QAAX,OACX,UAACpB,EAAD,YACE,UAACC,EAAD,sBAAiBoB,MACjB,SAACnB,EAAD,UAAUkB,MAFKQ,EADN,OAOT,4DAGT,EAED,G","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n\n`;\n\nexport const ReviewItem = styled.li`\n\n`;\n\nexport const Author = styled.h3`\nfont-size:16px;\n`;\n\nexport const Content = styled.p`\nfont-size:12px;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Author, Content,ReviewItem, List  } from './Reviews.styled';\n// import { getReviews } from 'components/Services/GetFilms';\n// const axios = require('axios').default;\n\n\nconst API_KEY = '07365d3730901c9189566ffe38d9d5bb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nexport const Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { Id } = useParams();\n\n    useEffect(() => {\n        const url = `${BASE_URL}movie/${Id}/reviews?api_key=${API_KEY}&language=en-US`;\n\n\n        getFilms();\n\n       function getFilms() {\n           fetch(url).then(response => response.json())\n               .then(data => {\n                   setReviews(data.results.map(({ author_detailes, content }) => ({\n                       author: author_detailes.username,\n                       content: content,\n                   })));\n               }).catch(error => console.log(error));\n        }\n        getFilms();\n    }, [Id]);\n\n    return (\n        reviews.length !== 0 ? (\n            <List>\n      {reviews.map(({ author, content },index) => (\n        <ReviewItem key={index}>\n          <Author>Author: {author}</Author>\n          <Content>{content}</Content>\n        </ReviewItem>\n      ))}\n    </List>)\n        :(<p>We haven't reviews for this movie</p>)\n        \n    );\n};\n\nexport default Reviews;"],"names":["List","styled","ReviewItem","Author","Content","Reviews","useState","reviews","setReviews","Id","useParams","useEffect","url","getFilms","fetch","then","response","json","data","results","map","author_detailes","content","author","username","catch","error","console","log","length","index"],"sourceRoot":""}