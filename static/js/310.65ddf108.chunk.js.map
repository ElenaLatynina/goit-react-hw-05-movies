{"version":3,"file":"static/js/310.65ddf108.chunk.js","mappings":"mPAGaA,EAASC,EAAAA,GAAAA,OAAH,sCAINC,EAAOD,EAAAA,GAAAA,KAAH,6EAOJE,EAAQF,EAAAA,GAAAA,MAAH,wF,SCoJlB,EAzJe,WACX,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAaL,EAAaM,IAAI,SACpC,GAA0BJ,EAAAA,EAAAA,UAASG,GAA0B,IAA7D,eAAOE,EAAP,KAAcC,EAAd,KAGMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAG,UAZA,gCAYA,gCAbD,mCAaC,4DAAiGL,GAGrGA,GAKDM,MAAMD,GAAKE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACnBF,MAAK,SAAAG,GACFb,EAAUa,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,MAAH,MAAoB,CAAEC,GAAtB,EAAUA,GAAoBD,MAAOA,EAArC,IAC9B,IAAEE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIzB,GAAE,CAAChB,IAOH,OACG,iCACI,UAACV,EAAD,CAAM6B,SARO,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOvB,MAAMsB,MACjCrB,EAASqB,GACT5B,EAAgB,CAAEM,MAAOsB,GAAW,EAIhC,WACI,SAAC/B,EAAD,CACIiC,KAAK,QACLC,KAAK,QACLC,aAAc1B,EACd2B,aAAa,MACbC,WAAS,EACTC,YAAY,eAEhB,SAACzC,EAAD,CAAQoC,KAAK,SAAb,UACI,2CAGR,wBACK5B,EAAOgB,KAAI,gBAAGE,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACR,yBACI,SAAC,KAAD,CAASiB,GAAE,kBAAahB,GAAMiB,MAAO,CAAEC,KAAM9B,GAA7C,SAA0DW,KADrDC,EADD,QAWvB,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Button = styled.button`\nmargin:15px;\n`;\n\nexport const Form = styled.form`\ndisplay:flex;\nheight:32px;\nmargin-bottom: 24px;\n\n`;\n\nexport const Input = styled.input`\nmargin-right:12px;\nborder: 1px solid navy;\nheight: 25px;\n\n\n`;\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\n// import { findFilm } from 'components/Services/GetFilms';\nimport { Button, Form, Input } from './Movies.styled';\n// const axios = require('axios').default;\n\nconst API_KEY = '07365d3730901c9189566ffe38d9d5bb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const queryParam = searchParams.get('query');\n    const [query, setQuery] = useState(queryParam ? queryParam : '');\n    \n   \n    const location = useLocation();\n\n    useEffect(() => {\n        const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n\n\n        if (!query) {\n            return;\n        }\n\n        function fetchMovie() {\n            fetch(url).then(response => response.json())\n                .then(data => {\n                    setMovies(data.results.map(({ title, id }) => ({ id: id, title: title })));\n                }).catch(error => console.log(error));\n        }\n        fetchMovie();\n\n    }, [query]);\n    const handleSubmit = event => {\n        event.preventDefault();\n        const value = event.target.query.value;\n        setQuery(value);\n        setSearchParams({ query: value }); }\n       \n     return (\n        <>\n            <Form onSubmit={handleSubmit}>\n                <Input\n                    type=\" text\"\n                    name=\"query\"\n                    defaultValue={query}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Find film\"\n                />\n                <Button type=\"submit\">\n                    <span>Search</span>\n                </Button>\n            </Form>\n            <ul>\n                {movies.map(({ id, title }) => (\n                    <li key={id}>\n                        <NavLink to={`/movies/${id}`} state={{ from: location }}>{title}</NavLink>\n                    </li>\n                )\n                    \n                )}\n            </ul>\n        </>\n    );\n\n    }\n   \n\n\n\n// const Movies = () => {\n//     const [selectedFilms, setSelectedFilms] = useState([]);\n//     const [inputValue, setInputValue] = useState('');\n//     const [searchParams, setSearchParams] = useSearchParams();\n//     const queryValue = searchParams.get('query');\n//     const location = useLocation();\n\n//     useEffect(() => {\n//         if (!queryValue) {\n//             return;\n//         }\n\n//         fetchFilms();\n\n//         async function fetchFilms() {\n//             try {\n//                 const url = findFilm(queryValue);\n//                 const response = await axios.get(url);\n\n//                 const { data: { results }, } = response;\n\n//                 setSelectedFilms(results);\n//             } catch (error) {\n//                 console.log(error);\n//             }\n//         }\n\n//     },[queryValue]);\n\n//     const handleSubmit = event => {\n//         event.preventDefault();\n//         if (inputValue !== '') { setSearchParams({ query: inputValue }); }\n//         setInputValue('');\n//     }\n//      return (\n//         <>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\" text\"\n//                     value={inputValue}\n//                     onChange={event => setInputValue(event.target.value)}\n//                     autoComplete=\"off\"\n//                     autoFocus\n//                     placeholder=\"Find film\"\n//                 />\n//                 <Button type=\"submit\">\n//                     <span>Search</span>\n//                 </Button>\n//             </form>\n//             <ul>\n//                 {selectedFilms.map(({ id, title }) => (\n//                     <li key={id}>\n//                         <NavLink to={`/movies/${id}`} state={{from:location}}>{title}</NavLink>\n//                     </li>\n//                 )\n                    \n//                 )}\n//             </ul>\n//         </>\n//     );\n    \n//     return (\n//         <>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\" text\"\n//                     value={inputValue}\n//                     onChange={event => setInputValue(event.target.value)}\n//                     autoComplete=\"off\"\n//                     autoFocus\n//                     placeholder=\"Find film\"\n//                 />\n//                 <Button type=\"submit\">\n//                     <span>Search</span>\n//                 </Button>\n//             </form>\n//             <ul>\n//                 {selectedFilms.map(({ id, title }) => (\n//                     <li key={id}>\n//                         <NavLink to={`/movies/${id}`} state={{from:location}}>{title}</NavLink>\n//                     </li>\n//                 )\n                    \n//                 )}\n//             </ul>\n//         </>\n//     );\n// };\n\nexport default Movies;"],"names":["Button","styled","Form","Input","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","queryParam","get","query","setQuery","location","useLocation","useEffect","url","fetch","then","response","json","data","results","map","title","id","catch","error","console","log","onSubmit","event","preventDefault","value","target","type","name","defaultValue","autoComplete","autoFocus","placeholder","to","state","from"],"sourceRoot":""}