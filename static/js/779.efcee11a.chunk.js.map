{"version":3,"file":"static/js/779.efcee11a.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,GAAAA,GAAH,0BAIJC,EAAaD,EAAAA,GAAAA,GAAH,0BAIVE,EAASF,EAAAA,GAAAA,GAAH,yCAING,EAAUH,EAAAA,GAAAA,EAAH,yC,kBCRPI,EAAU,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBV,OAlBEE,EAAAA,EAAAA,YAAU,YAIRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACzBN,EACEM,EAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAAnB,MAAkC,CACjDC,OAAQF,EAAeG,SACvBF,QAASA,EAFM,IAKlB,IACAG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAIf,GAAE,CAACb,KAGJ,8BACGF,EAAQkB,OAAS,GAChB,UAACzB,EAAD,WACGO,EAAQS,KAAI,WAAsBU,GAAW,IAA9BP,EAA6B,EAA7BA,OAAQD,EAAqB,EAArBA,QACtB,OACE,UAAChB,EAAD,YACE,UAACC,EAAD,sBAAiBgB,MACjB,SAACf,EAAD,UAAUc,MAFKQ,EAKpB,IARH,QAWG,iEAGV,EAaD,G,uJC1DA,IACMC,EAAU,mCAGHC,EAAmB,WAC5B,IAAMC,EAAO,UALA,gCAKA,sCAA4CF,GACzD,OAAOG,MAAMD,GAAShB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GAEtC,EAEYC,EAAiB,SAAAxB,GAC1B,IAAMyB,EAAQ,6CAAyCzB,EAAzC,oBAA4DkB,EAA5D,mBAEd,OAAOG,MAAMI,GACRrB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GACrB,EAEYG,EAAc,SAAA1B,GACvB,IAAM2B,EAAO,6CAAyC3B,EAAzC,4BAAoEkB,EAApE,mBACb,OAAQG,MAAMM,GAASvB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GACvC,EAEYpB,EAAe,SAAAH,GACxB,IAAM4B,EAAU,6CAAyC5B,EAAzC,4BAAoEkB,EAApE,0BAChB,OAAOG,MAAMO,GACVxB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GACnB,EAEYM,EAAW,SAAAC,GACpB,IAAMC,EAAO,4DAAwDb,EAAxD,iCAAwFY,EAAxF,+BACb,OAAQT,MAAMU,GAAS3B,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,MAAb,GACvC,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/GetFilms.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n\n`;\n\nexport const ReviewItem = styled.li`\n\n`;\n\nexport const Author = styled.h3`\nfont-size:16px;\n`;\n\nexport const Content = styled.p`\nfont-size:12px;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Author, Content, ReviewItem, List } from './Reviews.styled';\nimport { fetchReviews } from 'services/GetFilms';\nimport PropTypes from 'prop-types';\n\nexport const Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n\n    function getReviews()  {\n   \n      fetchReviews(movieId).then(data => {\n        setReviews(\n          data.results.map(({ author_details, content }) => ({\n            author: author_details.username,\n            content: content,\n          }))\n        );\n        })\n        .catch(error => console.log(error));\n    }\n      getReviews();\n      \n    }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ author, content }, index) => {\n            return (\n              <ReviewItem key={index}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </ReviewItem>\n            );\n          })};\n\n        </List>\n      ) : (<p>We don't have reviews for this movie</p>) }\n    </>\n    );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\n\nexport default Reviews;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '07365d3730901c9189566ffe38d9d5bb';\n\n\nexport const getTrendingFilms = () => {\n    const urlHome = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    return fetch(urlHome).then(response => response.json());\n        \n};\n\nexport const getDescription = movieId => {\n    const urlMovie = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n    return fetch(urlMovie)\n        .then(response => response.json());\n};\n\nexport const fetchActors = movieId => {\n    const urlCast = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    return  fetch(urlCast).then(response => response.json());\n};\n\nexport const fetchReviews = movieId => {\n    const urlReviews = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    return fetch(urlReviews)\n      .then(response => response.json());\n};\n\nexport const findFilm = query => {\n    const urlFilm = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n    return  fetch(urlFilm).then(response => response.json());\n};"],"names":["List","styled","ReviewItem","Author","Content","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","data","results","map","author_details","content","author","username","catch","error","console","log","length","index","API_KEY","getTrendingFilms","urlHome","fetch","response","json","getDescription","urlMovie","fetchActors","urlCast","urlReviews","findFilm","query","urlFilm"],"sourceRoot":""}