{"version":3,"file":"static/js/466.81336b8d.chunk.js","mappings":"uQAIaA,EAAyBC,EAAAA,GAAAA,IAAH,wCAItBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qPAeVG,EAAQH,EAAAA,GAAAA,KAAH,+CAILI,EAAQJ,EAAAA,GAAAA,GAAH,uCASLK,GALYL,EAAAA,GAAAA,IAAH,8CAKIA,EAAAA,GAAAA,GAAH,6JClCVM,EAASN,EAAAA,GAAAA,IAAH,qEAKNO,EAAiBP,EAAAA,GAAAA,IAAH,8GAOdI,EAAQJ,EAAAA,GAAAA,GAAH,6CAILQ,EAAQR,EAAAA,GAAAA,EAAH,gDAILS,EAAWT,EAAAA,GAAAA,EAAH,gDAIRU,EAAYV,EAAAA,GAAAA,GAAH,6C,GAOGA,EAAAA,GAAAA,IAAH,8C,QC9BTW,EAAY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACxD,OACI,UAACT,EAAD,YACI,0BACI,SAACD,EAAD,CAAQW,IAAKL,EAAQM,IAAKL,EAAOM,MAAM,MAAMC,OAAO,WAExD,4BACI,SAAC,EAAD,UAAQP,KACR,UAACL,EAAD,0BAAoBM,EAApB,QACA,SAACJ,EAAD,wBACA,SAACD,EAAD,UAAWM,KACX,SAACL,EAAD,sBACA,uBAAIM,SAInB,E,SC+ED,EAxFsB,WAAO,IAAD,IACxB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAwBzC,OAtBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,UAVL,gCAUK,iBAAuBP,EAAvB,oBATN,mCASM,mBAKVQ,MAAMD,GAAUE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAAqBF,MAAK,SAAAG,GACpDb,EAAS,CACAX,OAAO,mCAAD,OAAqCwB,EAAKC,aAChDxB,MAAOuB,EAAKvB,MACZC,MAAOwB,OAAOC,SAA6B,GAApBH,EAAKI,cAC5BzB,SAAUqB,EAAKrB,SACfC,OAAQoB,EAAKpB,OACRyB,QAAO,SAACC,EAAKC,GAAN,OAAiBD,GAAOC,EAAMC,KAAO,IAArC,GAA2C,IAClDC,QAEhB,IACIC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAGvB,GAAE,CAACvB,KAGA,2BACI,UAACzB,EAAD,YACI,UAACE,EAAD,CAAYiD,GAAIxB,EAAhB,WACI,SAACvB,EAAD,WACI,SAAC,MAAD,CAAkBgD,KAAM,OAFhC,WAOJ,SAACxC,EAAD,CACIC,OAAQU,EAAMV,OACdC,MAAOS,EAAMT,MACbC,MAAOQ,EAAMR,MACbC,SAAUO,EAAMP,SAChBC,OAAQM,EAAMN,UAEd,SAACZ,EAAD,sCACA,UAACC,EAAD,YACI,yBACI,SAAC,KAAD,CAAM6C,GAAG,OAAOtB,MAAO,CAAEC,KAAMH,GAA/B,qBAEJ,yBACI,SAAC,KAAD,CAAMwB,GAAG,UAAUtB,MAAO,CAAEC,KAAMH,GAAlC,2BAGR,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,UAQnB,C","sources":["components/MovieDetailes/MovieDetailes.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieDetailes/MovieDetailes.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';;\n\n\nexport const MovieDetailesContainer = styled.div`\npadding: 32px;\n`;\n\nexport const ReturnLink = styled(Link)`\ndisplay: inline-block;\npadding: 3px 10px;\nmargin-bottom: 10px;\nborder: 1px solid #a8a8ee;\nborder-radius: 10px;\ncolor: #000000;\ntext-decoration: none;\n:hover,\n:focus {\ncolor: #ffffff;\nbackground-color: navy;\n}\n`;\n\nexport const Arrow = styled.span`\n  margin-right: 16px;\n`;\n\nexport const Title = styled.h2`\nmargin: 12px;\n`;\n\nexport const MovieInfo = styled.div`\nmargin-left: 12px;\n\n`;\n\nexport const Additional = styled.ul`\nmargin-bottom: 12px;\npadding-bottom:8px;\nborder-bottom:1px solid grey;\n a {\n    display: block;\n    margin-bottom: 10px;\n  }\n`;","import styled from 'styled-components';\n\nexport const Poster = styled.img`\nborder: 2px solid #fff;\nborder-radius:5px;\n`;\n\nexport const MovieContainer = styled.div`\ndisplay: flex;\ngap: 16px;\npadding-bottom: 12px;\nborder-bottom: 2px solid #ccc8c8;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom:16px;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const TitlePart = styled.h3`\nmargin-bottom:16px;\n`;\n\n\n\n\nexport const MovieInfo = styled.div`\nmargin-left: 12px;\n\n`;","import { MovieContainer, Poster, Title, Score, Overview , TitlePart} from \"./MovieItem.styled\"\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ poster, title, score, overview, genres }) => {\n    return (\n        <MovieContainer>\n            <div>\n                <Poster src={poster} alt={title} width=\"240\" height=\"320\" />\n            </div>\n            <div>\n                <Title>{title}</Title>\n                <Score>User Score: {score}%</Score>\n                <TitlePart>Overview</TitlePart>\n                <Overview>{overview}</Overview>\n                <TitlePart>Genres</TitlePart>\n                <p>{genres}</p>\n            </div>\n        </MovieContainer>\n    );\n};\n\nMovieItem.propTypes = {\nposter: PropTypes.string,\ntitle: PropTypes.string,\nscore: PropTypes.number,\noverview: PropTypes.string,\ngenres: PropTypes.string,\n}","import PropTypes from 'prop-types';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams , useLocation, Link, Outlet} from 'react-router-dom';\nimport { ReturnLink, MovieDetailesContainer, Additional, Title, Arrow } from './MovieDetailes.styled';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { HiArrowUturnLeft } from 'react-icons/hi2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '07365d3730901c9189566ffe38d9d5bb';\n\nconst MovieDetailes = () => {\n    const [movie, setMovie] = useState({});\n    const { id } = useParams();\n    const location = useLocation();\n    const backLink = location.state?.from ?? '/movies';\n\n    useEffect(() => {\n        const urlMovie = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n        // const urlMovie = `https://api.themoviedb.org/3/movie/${id}?api_key=07365d3730901c9189566ffe38d9d5bb&language=en-US`;\n\n        \n        function fetchMovie() {\n            fetch(urlMovie).then(response => response.json()).then(data => {\n               setMovie({\n                        poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\n                        title: data.title,\n                        score: Number.parseInt(data.vote_average * 10),\n                        overview: data.overview,\n                        genres: data.genres\n                            .reduce((acc, genre) => (acc += genre.name + ' '), '')\n                            .trim(),\n                    }); \n            })\n                .catch(error => console.log(error));\n        }\n        fetchMovie();\n    }, [id]);\n\n    return (\n        <main>\n            <MovieDetailesContainer>\n                <ReturnLink to={backLink}>\n                    <Arrow>\n                        <HiArrowUturnLeft size={12} />\n                    </Arrow>\n                Back\n            </ReturnLink>\n                \n            <MovieItem\n                poster={movie.poster}\n                title={movie.title}\n                score={movie.score}\n                overview={movie.overview}\n                genres={movie.genres}\n            />\n                <Title>Additional Information</Title>\n                <Additional>\n                    <li>\n                        <Link to=\"cast\" state={{ from: backLink }}>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\" state={{ from: backLink }}>Reviews</Link>\n                    </li>\n                </Additional>\n                <Suspense fallback={<div>Is loading</div>}>\n                    <Outlet />\n                </Suspense>\n           \n        </MovieDetailesContainer>\n        </main>\n\n    );\n\n};\n\nMovieDetailes.propTypes = {\n  details: PropTypes.arrayOf(\n    PropTypes.exact({\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string.isRequired,\n      popularity: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.exact({\n          name: PropTypes.string.isRequired,\n        })\n      ),\n    })\n  ),\n  backLinkHref: PropTypes.string,\n  additionalInfo: PropTypes.arrayOf(\n    PropTypes.exact({\n      href: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n    })\n  ),\n  path: PropTypes.string,\n};\nexport default MovieDetailes;"],"names":["MovieDetailesContainer","styled","ReturnLink","Link","Arrow","Title","Additional","Poster","MovieContainer","Score","Overview","TitlePart","MovieItem","poster","title","score","overview","genres","src","alt","width","height","useState","movie","setMovie","id","useParams","backLink","useLocation","state","from","useEffect","urlMovie","fetch","then","response","json","data","poster_path","Number","parseInt","vote_average","reduce","acc","genre","name","trim","catch","error","console","log","to","size","Suspense","fallback"],"sourceRoot":""}